<project xmlns="http://maven.apache.org/POM/4.0.0" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
  http://maven.apache.org/maven-v4_0_0.xsd">
  
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mkyong.common</groupId>
  <artifactId>Spring3.2.5Hibernate4.0.1Integration</artifactId>
  <packaging>war</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>Spring3.2.5Hibernate4.0.1Integration Maven Webapp</name>
  <url>http://maven.apache.org</url>
  
  <repositories>
    <repository>
       <id>java.net.m2</id>
       <name>java.net m2 repo</name>
       <url>http://download.java.net/maven/2</url>
     </repository>
     
    <repository>
			<id>prime-repo</id>
			<name>Prime Repo</name>
			<url>http://repository.primefaces.org</url>
	</repository>
  </repositories>
  
<dependencies>

    <!-- PRIMEFACES-->
    <dependency>  
	    <groupId>org.primefaces</groupId>  
	    <artifactId>primefaces</artifactId>  
	    <version>5.0</version>  
	</dependency>

	<dependency>
			<groupId>org.primefaces.themes</groupId>
			<artifactId>glass-x</artifactId>
			<version>1.0.6</version>
	</dependency>
    
    
    
    
	<!-- HIBERNATE-->
	<!-- HIBERNATE-CORE -->
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-core</artifactId>
		<version>${hibernate.version}</version>
	</dependency>
		<!-- DEPENDE DE : HIBERNATE-CORE -->
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-entitymanager</artifactId>
		<version>${hibernate.version}</version>
	</dependency>
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-validator</artifactId>
		<version>${hibernate.version.validator}</version>
	</dependency>

	<dependency>
		<groupId>org.hibernate.javax.persistence</groupId>
		<artifactId>hibernate-jpa-2.0-api</artifactId>
		<version>${hibernate.version.jpa-api}</version>
	</dependency>

	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-annotations</artifactId>
		<version>3.5.6-Final</version>
	</dependency>
	<dependency>
		<groupId>org.hibernate</groupId>
		<artifactId>hibernate-commons-annotations</artifactId>
		<version>3.2.0.Final</version>
	</dependency>
        
        
        
        
        
        
        
        
        
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
            <scope>provided</scope>
        </dependency>

	<dependency>
		<groupId>org.slf4j</groupId>
		<artifactId>slf4j-api</artifactId>
		<version>1.6.4</version>
	</dependency>

	<!-- 
	<dependency>
		<groupId>asm</groupId>
		<artifactId>asm</artifactId>
		<version>3.3.1</version>
	</dependency>
	 -->
      <dependency>
            <groupId>javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.12.1.GA</version>
      </dependency>
	
	<!-- Hibernate core library dependecy start -->
	<dependency>
	  <groupId>dom4j</groupId>
	  <artifactId>dom4j</artifactId>
	  <version>1.6.1</version>
	</dependency>
 
	<dependency>
	  <groupId>commons-logging</groupId>
	  <artifactId>commons-logging</artifactId>
	  <version>1.1.1</version>
	</dependency>
 
	<dependency>
	  <groupId>commons-collections</groupId>
	  <artifactId>commons-collections</artifactId>
	  <version>3.2.1</version>
	</dependency>
 
	<dependency>
	  <groupId>cglib</groupId>
	  <artifactId>cglib</artifactId>
	  <version>2.2</version>
	</dependency>
	<!-- Hibernate core library dependecy end -->
 
	<!-- Hibernate query library dependecy start -->
	<dependency>
	  <groupId>antlr</groupId>
	  <artifactId>antlr</artifactId>
	  <version>2.7.7</version>
	</dependency>
	<!-- Hibernate query library dependecy end -->
	
  	
  	<!-- MySQL database driver -->
	<dependency>
		<groupId>mysql</groupId>
		<artifactId>mysql-connector-java</artifactId>
		<version>5.1.9</version>
	</dependency>
  	
  	
  
  	  	
  	<!-- For Servlet Container like Tomcat -->
  	<!-- http://download.java.net/maven/2 -->
	<dependency>
	  <groupId>com.sun.faces</groupId>
	  <artifactId>jsf-api</artifactId>
	  <version>2.1.0-b03</version>
	</dependency>
	
	<dependency>
	  <groupId>com.sun.faces</groupId>
	  <artifactId>jsf-impl</artifactId>
	  <version>2.1.0-b03</version>
	</dependency>
	
	<!-- EL 2.2 to support method parameter in EL -->
    <dependency>
	  <groupId>org.glassfish.web</groupId>
	  <artifactId>el-impl</artifactId>
	  <version>2.2</version>
	</dependency>
	
	
    <!-- http://repo1.maven.org/maven2/ -->
    <dependency>
	  <groupId>javax.servlet</groupId>
	  <artifactId>jstl</artifactId>
	  <version>1.2</version>
	</dependency>

	<dependency>
	  <groupId>javax.servlet</groupId>
	  <artifactId>servlet-api</artifactId>
	  <version>2.5</version>
	</dependency>

	<dependency>
	  <groupId>javax.servlet.jsp</groupId>
	  <artifactId>jsp-api</artifactId>
	  <version>2.1</version>
	</dependency>

	
	
	
	
	
	
	
	
	
	<!-- SPRING FRAMEWORK-->
	<!-- Spring framework, el parameter spring.version esta al final -->
	<!-- Core utilities used by other modules. Define this if you use Spring 
		Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-core</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
	<!-- Expression Language (depends on spring-core) Define this if you use 
		Spring Expression APIs (org.springframework.expression.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-expression</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
	<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
		this if you use Spring Bean APIs (org.springframework.beans.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-beans</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
	<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
		spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-aop</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
	<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
		spring-beans) This is the central artifact for Spring's Dependency Injection 
		Container and is generally always defined -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
	<!-- Various Application Context utilities, including EhCache, JavaMail, 
		Quartz, and Freemarker integration Define this if you need any of these integrations -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-context-support</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
	<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
		spring-aop, spring-context) Define this if you use Spring Transactions or 
		DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-tx</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
	<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
		spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-jdbc</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
	<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA and 
		iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
		Define this if you need ORM (org.springframework.orm.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-orm</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
	<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
		JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
		spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-oxm</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
	<!-- Web application development utilities applicable to both Servlet and 
		Portlet Environments (depends on spring-core, spring-beans, spring-context) 
		Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
		web framework with Spring (org.springframework.web.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-web</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
	<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
		spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
		Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
	<!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
		spring-context, spring-web) Define this if you use Spring MVC with a Portlet 
		Container (org.springframework.web.portlet.*) -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-webmvc-portlet</artifactId>
		<version>${org.springframework.version}</version>
	</dependency>
	<!-- Support for testing Spring applications with tools such as JUnit and 
		TestNG This artifact is generally always defined with a 'test' scope for 
		the integration testing framework and unit testing stubs -->
	<dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-test</artifactId>
		<version>${org.springframework.version}</version>
		<scope>test</scope>
	</dependency>
	
	
	
	
	
	
	
	
	
	
	
  
  </dependencies>
  
  <build>
    <finalName>Spring3.2.5Hibernate4.0.1Integration</finalName>
     <plugins>
       <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-compiler-plugin</artifactId>
           <version>2.3.1</version>
           <configuration>
               <source>1.6</source>
               <target>1.6</target>
           </configuration>
       </plugin>
    </plugins>
  </build>
  
   <properties>
      <org.springframework.version>4.0.5.RELEASE</org.springframework.version>
      <hibernate.version>4.3.5.Final</hibernate.version>
      <hibernate.version.validator>5.1.1.Final</hibernate.version.validator>
      
      <!-- http://mvnrepository.com/artifact/org.hibernate/hibernate-commons-annotations/3.2.0.Final -->
      <hibernate.annotations>3.2.0.Final</hibernate.annotations>
      
      <!-- http://mvnrepository.com/artifact/org.hibernate.javax.persistence/hibernate-jpa-2.0-api -->
      <hibernate.version.jpa-api>1.0.1.Final</hibernate.version.jpa-api>
      
      
   </properties>
   
</project>